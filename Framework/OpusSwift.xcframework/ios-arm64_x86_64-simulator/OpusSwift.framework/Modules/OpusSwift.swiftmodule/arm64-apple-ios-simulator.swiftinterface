// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OpusSwift
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import OpusSwift
import Swift
import _Concurrency
import _StringProcessing
public enum OggError : Swift.Error {
  case outOfSync
  case internalError
  public static func == (a: OpusSwift.OggError, b: OpusSwift.OggError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum OpusError : Swift.Error {
  case okay
  case badArgument
  case bufferTooSmall
  case internalError
  case invalidPacket
  case unimplemented
  case invalidState
  case allocationFailure
  public var rawValue: Swift.Int32 {
    get
  }
  public init?(rawValue: Swift.Int32)
  public static func == (a: OpusSwift.OpusError, b: OpusSwift.OpusError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol OpusEncoderProtocol {
  init(pcmRate: Swift.Int32, pcmChannels: Swift.Int32, pcmBytesPerFrame: Swift.UInt32, opusRate: Swift.Int32, application: OpusSwift.OpusApplication) throws
  func encode(pcm: Foundation.Data) throws -> Foundation.Data
}
final public class OpusEncoder : OpusSwift.OpusEncoderProtocol {
  public init(pcmRate: Swift.Int32, pcmChannels: Swift.Int32, pcmBytesPerFrame: Swift.UInt32, opusRate: Swift.Int32, application: OpusSwift.OpusApplication) throws
  @objc deinit
  final public func encode(pcm: Foundation.Data) throws -> Foundation.Data
}
public protocol OpusDecoderProtocol {
  init(numChannels: Swift.Int32, sampleRate: Swift.Int32) throws
  func decode(audioData: Foundation.Data) throws -> Foundation.Data
}
final public class OpusDecoder : OpusSwift.OpusDecoderProtocol {
  public init(numChannels: Swift.Int32 = 1, sampleRate: Swift.Int32 = 48000) throws
  final public func decode(audioData: Foundation.Data) throws -> Foundation.Data
  @objc deinit
}
public enum OpusApplication {
  case voip
  case audio
  case lowDelay
  public var rawValue: Swift.Int32 {
    get
  }
  public init?(rawValue: Swift.Int32)
  public static func == (a: OpusSwift.OpusApplication, b: OpusSwift.OpusApplication) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension OpusSwift.OggError : Swift.Equatable {}
extension OpusSwift.OggError : Swift.Hashable {}
extension OpusSwift.OpusError : Swift.Equatable {}
extension OpusSwift.OpusError : Swift.Hashable {}
extension OpusSwift.OpusApplication : Swift.Equatable {}
extension OpusSwift.OpusApplication : Swift.Hashable {}
